"""
Each new term in the Fibonacci sequence is generated by adding
the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose
values do not exceed four million, find the sum of the even-valued terms.
"""

class Fibonacci:
    def __init__(self,n=2):
        self.__numbers = [1,2]
        if ( n > 2):
            self.get_n(n)
    def get_n(self,n):
        if(len(self.__numbers) >= n):
            return self.__numbers[n-1]
        res = self.get_n(n-2) + self.get_n(n-1)
        self.__numbers.append(res)
        return res
    def get_s(self,n=-1):
        if (n==-1):
            return self.__numbers
        if (len(self.__numbers) >= n):
            return self.__numbers[:n]
        self.get_n(n)
        return self.__numbers[:n]
    def get_max(self):
        return self.__numbers[-1]

f = Fibonacci()
i = 1
while (f.get_max() < 4e6):
    f.get_n(i)
    i += 1
res = sum(f.get_s()[1:-1:3])

    
