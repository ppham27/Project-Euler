"""
Consider all integer combinations of ab for 2 <= a <= 5 and 2 <= b <= 5:

22=4, 23=8, 24=16, 25=32
32=9, 33=27, 34=81, 35=243
42=16, 43=64, 44=256, 45=1024
52=25, 53=125, 54=625, 55=3125
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 <= a <= 100 and 2 <= b <= 100?
"""

import math

def count_distinct_terms(upper_a, upper_b):
    """
    >>> count_distinct_terms(5,5)
    15
    """
    distinct_terms = 0
    lower_a = 2
    lower_b = 2
    checked = [False]*(upper_a+1)
    for a in range(lower_a, upper_a+1):
        if checked[a] is False:
            sub_b = int(math.floor(math.log(upper_a)/math.log(a)))
            actual_upper_b = sub_b*upper_b    
            bs = set(range(lower_b,upper_b+1))
            for b in range(lower_b, sub_b+1):
                checked[a**b] = True
                bs.update(range(b*upper_b, upper_b, -b))
            distinct_terms += len(bs)
    return distinct_terms

if __name__=="__main__":
    import doctest
    doctest.testmod()
    print(count_distinct_terms(100,100))
    

